# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CPM63svz0B8uYZzt9_uS3ONEF409ZOXJ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import pairwise_distances
from sklearn import cluster, datasets, preprocessing, metrics

df = pd.read_csv("https://raw.githubusercontent.com/kartikjindgar/NYU-DataScience-Bootcamp-Fall23/main/Week7/iris.csv")
print(df['Name'].value_counts())
df.head(5)

cols = df.columns[:-1]
sns.pairplot(df[cols])

X_scaled = preprocessing.MinMaxScaler().fit_transform(df[cols])

k = 2
kmeans = cluster.KMeans(n_clusters=k)
kmeans.fit(X_scaled)

k_values = [2, 3, 4, 5]
for k in k_values:
  kmeans = cluster.KMeans(n_clusters=k)
  kmeans.fit(X_scaled)

  labels = kmeans.labels_
  centroids = kmeans.cluster_centers_
  inertia = kmeans.inertia_

  print("k: ", k)
  print("Inertia: ", inertia)
  print("Silhouette Score: ", metrics.silhouette_score(X_scaled, labels, metric='euclidean'))
  print("")

df = pd.read_csv("https://raw.githubusercontent.com/kartikjindgar/NYU-DataScience-Bootcamp-Fall23/main/Week7/nutrients.txt", delimiter='\s+')
df.head(5)

cols = df.columns[1:]
sns.pairplot(df[cols])

X_scaled = preprocessing.MinMaxScaler().fit_transform(df[cols])
k = 2
kmeans = cluster.KMeans(n_clusters=k)
kmeans.fit(X_scaled)

labels = kmeans.labels_
centroids = kmeans.cluster_centers_
inertia = kmeans.inertia_

metrics.silhouette_score(X_scaled, labels, metric='euclidean')

df['label'] = labels
df.head()

cols = df.columns[1:-1]
sns.pairplot(df, x_vars=cols, y_vars= cols, hue='label')

sns.pairplot(df, x_vars=cols, y_vars= cols, hue='Name')